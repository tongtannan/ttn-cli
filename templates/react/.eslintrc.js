module.exports = {
  env: {
    browser: true,
    es6: true,
    jest: true,
  },
  extends: [
    'airbnb',
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'plugin:jest/recommended',
    'plugin:import/typescript',
  ],
  globals: {
    Atomics: 'readonly',
    SharedArrayBuffer: 'readonly',
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2018,
    sourceType: 'module',
  },
  plugins: ['react', '@typescript-eslint', 'jest', 'react-hooks'],
  rules: {
    'react/jsx-curly-newline': 0,
    'react/default-props-match-prop-types': 0,
    'react/jsx-no-bind': 0,
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        js: 'never',
        jsx: 'never',
        ts: 'never',
        tsx: 'never',
      },
    ],
    // disable the rule for all files
    'jsx-a11y/no-static-element-interactions': 0,
    'import/no-extraneous-dependencies': ['error', { devDependencies: true }],
    'react/prop-types': [
      2,
      {
        ignore: ['children'],
      },
    ],
    'react/jsx-filename-extension': [1, { extensions: ['.js', '.jsx'] }],
    'react/static-property-placement': ['error', 'static public field'],
    'react/require-default-props': 0,
    'react/prop-types': 0,
    'react/forbid-prop-types': 0,
    'react/jsx-curly-spacing': 0,
    'react/no-unused-prop-types': 0,
    'react/jsx-filename-extension': 0,
    'jsx-a11y/click-events-have-key-events': 0,
    'jsx-a11y/label-has-associated-control': 0,
    'react/prefer-stateless-function': 0,
    'no-useless-constructor': 0,
    '@typescript-eslint/no-explicit-any': 0,
    'import/prefer-default-export': 'off',
    'import/no-cycle': 0,
    'react/destructuring-assignment': 0,
    '@typescript-eslint/camelcase': 0,
    'no-param-reassign': 0,
    '@typescript-eslint/no-empty-interface': 0,
    'react/display-name': 0,
    'operator-linebreak': 0,
    'jsx-a11y/no-noninteractive-element-interactions': 0,
    'one-var': 0,
    'no-nested-ternary': 0,
    'react/sort-comp': 0,
    '@typescript-eslint/interface-name-prefix': 0,
    'jsx-a11y/media-has-caption': 0,
    'react/jsx-wrap-multilines': 0,
    'wrap-iife': 0,
    '@typescript-eslint/no-empty-function': 0,
    'react/no-array-index-key': 0,
    'no-confusing-arrow': 0,
    'no-else-return': 0,
    'jsx-a11y/anchor-is-valid': 0,
    'react/jsx-one-expression-per-line': 0,
    'jest/no-test-callback': 0,
    '@typescript-eslint/ban-ts-ignore': 0,
    'react/jsx-curly-brace-presence': 0,
    '@typescript-eslint/explicit-function-return-type': 0,
    'no-empty': 0,
    'no-plusplus': [
      'error',
      {
        allowForLoopAfterthoughts: true,
      },
    ],
    'prefer-promise-reject-errors': 0,
    'no-restricted-syntax': 0,
    'global-require': 0,
    '@typescript-eslint/no-var-requires': 0,
    'class-methods-use-this': 0,
    'import/order': 0,
    'function-paren-newline': 0,
    'max-len': 0,
    'func-names': ['error', 'as-needed'],
    'no-console': ['error', { allow: ['warn', 'error'] }],
    '@typescript-eslint/explicit-function-return-type': 'off',
    indent: [
      2,
      2,
      {
        SwitchCase: 1,
      },
    ],
    'linebreak-style': ['error', 'unix'],
    quotes: ['error', 'single'],
    semi: ['error', 'always'],
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',
    'no-underscore-dangle': 0,
    'no-unused-expressions': ['error', { allowShortCircuit: true }],
    'implicit-arrow-linebreak': 0,
    'no-spaced-func': 0,
    'func-call-spacing': 0,
    '@typescript-eslint/func-call-spacing': ['error'],
    'prefer-arrow-callback': ['error', { allowNamedFunctions: true }],
    'consistent-return': 0,
    'react/jsx-props-no-spreading': 0,
    'object-curly-newline': ['error', { multiline: true, consistent: true }],
    camelcase: 0,
    'no-shadow': 0,
    'react-hooks/exhaustive-deps': 0,
    '@typescript-eslint/no-unused-vars': 0,
    'max-len': [2, { code: 120, tabWidth: 4, comments: 150 }],
    'no-use-before-define': 'off',
    '@typescript-eslint/no-use-before-define': ['error'],
    semi: 0,
    '@typescript-eslint/semi': [2, 'always'],
    quotes: 0,
    '@typescript-eslint/quotes': [2, 'single'],
    'comma-dangle': 0,
    '@typescript-eslint/comma-dangle': [
      2,
      {
        arrays: 'always-multiline',
        objects: 'always-multiline',
        imports: 'always-multiline',
        exports: 'always-multiline',
        functions: 'always-multiline',
        enums: 'always-multiline',
        generics: 'always-multiline',
        tuples: 'always-multiline',
      },
    ],
    '@typescript-eslint/no-explicit-any': 0,
    '@typescript-eslint/explicit-module-boundary-types': 0,
    '@typescript-eslint/member-delimiter-style': [
      2,
      {
        multiline: {
          delimiter: 'semi',
          requireLast: true,
        },
        singleline: {
          delimiter: 'comma',
          requireLast: true,
        },
      },
    ],
    '@typescript-eslint/prefer-enum-initializers': 2,
    'ban-types': 0,
    '@typescript-eslint/ban-types': 2,
  },
  overrides: [
    {
      // enable the rule specifically for TypeScript files
      files: ['*.ts'],
      rules: {
        '@typescript-eslint/explicit-function-return-type': 0,
      },
    },
    {
      files: ['*.test.js', '*ci/*'],
      rules: {
        '@typescript-eslint/explicit-function-return-type': 'off',
        'no-console': 'off',
        'jest/no-commented-out-tests': 'off',
      },
    },
  ],
  settings: {
    'import/resolver': {
      alias: {
        map: [['@', './src']],
        extensions: ['.tsx', '.ts', '.js', '.jsx', '.json'],
      },
    },
  },
};
